{
  "comments": [
    {
      "key": {
        "uuid": "106fa0ad_13adacaa",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-17T17:49:29Z",
      "side": 1,
      "message": "wangying: ADDRESS_SANITIZER_RUNTIME_LIBRARY comes from build/core/clang/config.mk. Is this an okay way to do that? Is this going to have problems with multilib?",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106fa0ad_d3997488",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-17T17:52:14Z",
      "side": 1,
      "message": "An important thing to note is that the name of this module depends on the architecture it is being built for.",
      "parentUuid": "106fa0ad_13adacaa",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908ab09b_c2a7e49b",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-10-17T17:52:33Z",
      "side": 1,
      "message": "Should be fine.",
      "parentUuid": "106fa0ad_13adacaa",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908ab09b_82bebca4",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-10-17T17:54:36Z",
      "side": 1,
      "message": "Oh, I didn\u0027t know that. Then it won\u0027t work in multilib build.",
      "parentUuid": "106fa0ad_d3997488",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106fa0ad_d3ded41e",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-17T17:58:28Z",
      "side": 1,
      "message": "I didn\u0027t think so. Is there some $(combo_2nd_arch_prefix) magic that can be done to make it work?",
      "parentUuid": "908ab09b_82bebca4",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "708ffcad_44d042d7",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-10-17T18:09:20Z",
      "side": 1,
      "message": "I don\u0027t like that for LOCAL_MODULE is referenced even before the build system set up LOCAL_2ND_ARCH_VAR_PREFIX.\nCan we remove the arch from the module name? \nAfter second thought, I think \"LOCAL_MODULE :\u003d $(ADDRESS_SANITIZER_RUNTIME_LIBRARY)\" actually works - in mutlitlib build we use the TARGET_ARCH to name both the 64-bit and the 32-bit libraries. It may be misleading, but the build system logic is still correct.",
      "parentUuid": "106fa0ad_d3ded41e",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106fa0ad_f3b110da",
        "filename": "lib/asan/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-17T18:13:29Z",
      "side": 1,
      "message": "We would prefer to leave the arch name in the module names to remain consistent with the upstream names of these modules. It may not be 100% critical, but there might be tools (or tests) that depend on the library being named correctly.",
      "parentUuid": "708ffcad_44d042d7",
      "revId": "58fc9fde7b8f0c48c054d213141ca8f362c97667",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}